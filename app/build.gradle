apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

ext {
    koin_version = '2.1.5'
    versions_scarlet = '0.2.5-SNAPSHOT'
}

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.example.lolresults"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            def(baseUrl, imagesUrl, apiToken) = apiPropertiesFromLocalFile()

            buildConfigField "String", "BASE_URL", baseUrl
            buildConfigField "String", "IMAGE_URL", imagesUrl
            buildConfigField "String", "API_TOKEN", apiToken
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.core:core-ktx:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    implementation 'com.google.android.material:material:1.1.0'

    // retrofit + gson
    implementation "com.squareup.retrofit2:retrofit:2.6.0"
    implementation "com.squareup.retrofit2:converter-gson:2.6.0"
    implementation("com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:0.9.2") {
        exclude group: "com.squareup.retrofit2"
    }
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.13.1'

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.3"
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    // Koin AndroidX
    implementation "org.koin:koin-androidx-scope:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    implementation "org.koin:koin-androidx-fragment:$koin_version"
    implementation "org.koin:koin-androidx-ext:$koin_version"

    implementation "com.tinder.scarlet:scarlet:${versions_scarlet}"
    implementation "com.tinder.scarlet:protocol-websocket-okhttp:${versions_scarlet}"
    implementation "com.tinder.scarlet:message-adapter-gson:${versions_scarlet}"
    implementation "com.tinder.scarlet:stream-adapter-coroutines:${versions_scarlet}"
    implementation "com.tinder.scarlet:lifecycle-android:${versions_scarlet}"


    implementation 'com.facebook.stetho:stetho:1.5.0'
    implementation 'com.google.code.gson:gson:2.8.6'

    implementation 'com.facebook.fresco:fresco:2.2.0'
    implementation "com.facebook.fresco:imagepipeline-okhttp3:2.2.0"

    implementation 'com.squareup.okhttp3:logging-interceptor:4.2.1'
    implementation 'com.caverock:androidsvg:1.4'

    implementation ("com.github.bumptech.glide:glide:4.11.0") {
        exclude group: "com.android.support"
    }
}

def apiPropertiesFromLocalFile() {
    Properties props = new Properties()
    def propFile = rootProject.file('api.properties')

    if (propFile.canRead()) {
        props.load(new FileInputStream(propFile))
        if (props != null &&
                props.containsKey('base_url') &&
                props.containsKey('images_url') &&
                props.containsKey('api_token')) {

            def baseUrl = props['base_url']
            def imagesUrl = props['images_url']
            def apiToken = props['api_token']
            return [baseUrl, imagesUrl, apiToken]
        } else {
            println 'api.properties found but some entries are missing'
        }
    } else {
        println 'api.properties not found en local'
    }
    return null
}
